{"version":3,"sources":["services/api.js","components/Card/Card.js","components/CardList/CardList.js","components/Filters/Filters.js","components/App/App.js","serviceWorker.js","index.js"],"names":["getData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","result","list","wrap","_context","prev","next","fetch","sent","json","results","map","item","name","image","gender","location","species","status","abrupt","t0","console","log","stop","apply","this","arguments","Card","_this$props","props","addToFavourites","img","favourites","react_default","createElement","className","src","alt","concat","includes","onClick","event","id","Component","CardList","_this","index","components_Card_Card","key","Filters","type","placeholder","onChange","searchName","addItems","disabled","addFlag","removeItems","removeFlag","filterLocation","value","defaultValue","sortName","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","listCopy","currentFiltered","filteredList","filteredListCopy","searchFromInput","quantity","position","counter","listLength","sortByName","bind","assertThisInitialized","searchByName","addMoreCards","removeCards","setState","JSON","parse","localStorage","getItem","persist","target","toConsumableArray","filter","toLowerCase","slice","sortedList","sort","i","j","sortType","filtered","length","_this2","splice","elemIndex","indexOf","newArr","setItem","stringify","newState","components_Filters_Filters","components_CardList_CardList","Boolean","window","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d7218d47.chunk.js","sourcesContent":["const URL = \"https://rickandmortyapi.com/api/character\";\r\n\r\nconst getData = async () => {\r\n  try {\r\n    const response = await fetch(URL);\r\n    const result = await response.json();\r\n    const list = result.results.map(item => {\r\n      return {\r\n        name: item.name,\r\n        image: item.image,\r\n        gender: item.gender,\r\n        location: item.location.name,\r\n        species: item.species,\r\n        status: item.status\r\n      };\r\n    });\r\n    return list;\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nexport default getData;\r\n","import React, { Component } from \"react\";\r\nimport \"./Card.css\";\r\n\r\nclass Card extends Component {\r\n  render() {\r\n    const {\r\n      name,\r\n      species,\r\n      addToFavourites,\r\n      location,\r\n      img,\r\n      favourites\r\n    } = this.props;\r\n    return (\r\n      <div className=\"card\">\r\n        <div className=\"img-wrapper\">\r\n          <img src={img} alt={`img-${name}`} className=\"card__img\" />\r\n          <i\r\n            className={\r\n              favourites.includes(name)\r\n                ? \"card__icon card__icon--red far fa-heart\"\r\n                : \"card__icon far fa-heart\"\r\n            }\r\n            onClick={event => {\r\n              addToFavourites(event);\r\n            }}\r\n            id={name}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"card__text\">\r\n          <p className=\"card__name\">{name}</p>\r\n          <p className=\"card__gender\">{species}</p>\r\n          <p className=\"card__whatever\">{location}</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"../Card/Card\";\r\nimport \"./CardList.css\";\r\n\r\nclass CardList extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"card-list\">\r\n        {this.props.list.map((item, index) => {\r\n          return (\r\n            <Card\r\n              key={index}\r\n              id={item.name}\r\n              img={item.image}\r\n              name={item.name}\r\n              species={item.species}\r\n              location={item.location}\r\n              addToFavourites={this.props.addToFavourites}\r\n              favourites={this.props.favourites}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardList;\r\n","import React, { Component } from \"react\";\r\nimport \"./Filters.css\";\r\n\r\nconst Filters = props => {\r\n  return (\r\n    <div className=\"filters\">\r\n      <form className=\"filters__form\">\r\n        <div className=\"filters__item search\">\r\n          <div className=\"input-wrapper\">\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n              onChange={props.searchName}\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            className=\"btn less__btn\"\r\n            type=\"button\"\r\n            onClick={props.addItems}\r\n            disabled={props.addFlag}\r\n          >\r\n            More\r\n          </button>\r\n\r\n          <button\r\n            className=\"btn more__btn\"\r\n            type=\"button\"\r\n            onClick={props.removeItems}\r\n            disabled={props.removeFlag}\r\n          >\r\n            Remove\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"filters__item filter\">\r\n          <select\r\n            className=\"form-control\"\r\n            type=\"button\"\r\n            onChange={props.filterLocation}\r\n            id=\"desc\"\r\n          >\r\n            <option value=\"\" disabled>\r\n              Race\r\n            </option>\r\n            <option value=\"All\" defaultValue=\"All\">\r\n              All\r\n            </option>\r\n            <option value=\"Human\">Human</option>\r\n\r\n            <option value=\"Alien\">Alien</option>\r\n          </select>\r\n        </div>\r\n\r\n        <div className=\"filters__item sort\">\r\n          <button\r\n            className=\"btn sort__btn\"\r\n            type=\"button\"\r\n            onClick={props.sortName}\r\n            id=\"asc\"\r\n          >\r\n            Sort\r\n          </button>\r\n          <button\r\n            className=\"btn sort__btn\"\r\n            type=\"button\"\r\n            onClick={props.sortName}\r\n            id=\"desc\"\r\n          >\r\n            Sort\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filters;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport getData from \"../../services/api\";\nimport CardList from \"../CardList/CardList\";\nimport Filters from \"../Filters/Filters\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.sortByName = this.sortByName.bind(this);\n    this.searchByName = this.searchByName.bind(this);\n    this.addMoreCards = this.addMoreCards.bind(this);\n    this.removeCards = this.removeCards.bind(this);\n    this.addToFavourites = this.addToFavourites.bind(this);\n    this.filterLocation = this.filterLocation.bind(this);\n  }\n\n  state = {\n    list: [],\n    favourites: [],\n    removeFlag: true,\n    addFlag: null,\n    listCopy: [],\n    currentFiltered: [],\n    filteredList: [],\n    filteredListCopy: [],\n    searchFromInput: null,\n    quantity: 4,\n    position: 0,\n    counter: 0,\n    listLength: null,\n    gender: \"\"\n  };\n\n  async componentDidMount() {\n    const list = await getData();\n    this.setState({\n      list: list,\n      listCopy: this.state.list\n    });\n\n    this.setState(state => {\n      let newArr = JSON.parse(localStorage.getItem(\"favourites\"));\n      return { favourites: newArr };\n    });\n\n    this.addMoreCards();\n  }\n\n  filterLocation(event) {\n    event.persist();\n\n    this.setState(state => {\n      let value = event.target.value;\n      let filteredListCopy = [...state.filteredListCopy];\n      let filteredCopy;\n\n      if (value !== \"Human\" && value !== \"Alien\") {\n        filteredCopy = filteredListCopy;\n      } else {\n        filteredCopy = filteredListCopy.filter(item => item.species === value);\n      }\n      return { filteredList: filteredCopy };\n    });\n  }\n\n  searchByName(event) {\n    event.persist();\n\n    this.setState(state => {\n      if (event.target.value) {\n        const filtered = [...state.filteredList].filter(item => {\n          return item.name\n            .toLowerCase()\n            .includes(event.target.value.toLowerCase());\n        });\n\n        return { filteredList: filtered };\n      }\n\n      if (!event.target.value) {\n        return {\n          filteredList: state.list.slice(0, state.quantity + state.position - 4)\n        };\n      }\n    });\n  }\n\n  sortByName(event) {\n    let sortedList = this.state.filteredList.sort((i, j) => {\n      let sortType = event.target.id;\n      if (sortType === \"asc\") {\n        return i.name > j.name ? 1 : -1;\n      } else if (sortType === \"desc\") {\n        return i.name > j.name ? -1 : 1;\n      }\n    });\n\n    this.setState({ filteredList: sortedList });\n  }\n\n  addMoreCards() {\n    let filtered = this.state.list.slice(\n      this.state.position,\n      this.state.quantity + this.state.position\n    );\n\n    if (this.state.position > 0) {\n      this.setState(state => {\n        return {\n          filteredList: state.filteredList.concat(filtered),\n          filteredListCopy: state.filteredListCopy.concat(filtered),\n          position:\n            state.position <= state.list.length - 1 ? state.position + 4 : 19,\n          addFlag: state.position >= state.list.length - 1 ? true : false,\n          removeFlag: false\n        };\n      });\n    } else {\n      this.setState(state => {\n        return {\n          position: state.position + 4,\n          filteredList: state.filteredList.concat(filtered),\n          filteredListCopy: state.filteredList.concat(filtered),\n          removeFlag: false\n        };\n      });\n    }\n  }\n\n  removeCards() {\n    let filtered = this.state.filteredList.slice();\n\n    this.setState(state => {\n      filtered.splice(-4, 4);\n\n      if (this.state.position <= 3) {\n        return {\n          filteredList: [],\n          filteredListCopy: [],\n          position: 0,\n          removeFlag: true\n        };\n      }\n\n      return {\n        filteredList: filtered,\n        addFlag: false,\n        filteredListCopy: filtered,\n        position: state.position <= 0 ? 0 : state.position - 4\n      };\n    });\n  }\n\n  addToFavourites(event) {\n    event.persist();\n\n    if (this.state.favourites.includes(event.target.id)) {\n      this.setState(state => {\n        let elemIndex = state.favourites.indexOf(event.target.id);\n        let newArr = [...state.favourites];\n        newArr.splice(elemIndex, 1);\n        localStorage.setItem(\"favourites\", JSON.stringify(newArr));\n        return { favourites: newArr };\n      });\n    } else {\n      this.setState(state => {\n        let newState = [...state.favourites, event.target.id];\n        localStorage.setItem(\"favourites\", JSON.stringify(newState));\n        return { favourites: newState };\n      });\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Filters\n          sortName={this.sortByName}\n          searchName={this.searchByName}\n          addItems={this.addMoreCards}\n          removeItems={this.removeCards}\n          filterLocation={this.filterLocation}\n          addFlag={this.state.addFlag}\n          removeFlag={this.state.removeFlag}\n        />\n        <CardList\n          list={this.state.filteredList}\n          addToFavourites={this.addToFavourites}\n          favourites={this.state.favourites}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}